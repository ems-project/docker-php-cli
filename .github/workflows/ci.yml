name: Continuous Docker Image Build

on:
  push:
    branches:
      - '7.4-py2-node12'

jobs:

  build-docker-images:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.0.2

      - name: Fill GitHub Environment Variables
        uses: FranzDiebold/github-env-vars-action@v2.5.0

      - name: Setup BATS testing framework
        uses: mig4/setup-bats@v1.2.0
        with:
          bats-version: 1.2.1

      - name: Fill PHP Version Environment Variable
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .build.env

      - name: Prepare Workflow Environment
        id: prep
        run: |
          docker network create docker_default
          docker pull appropriate/curl:latest
          PHPCLI_DEV_IMAGENAME=base-php-cli-dev
          DH_PHPCLI_DEV_IMAGENAME=docker.io/elasticms/${PHPCLI_DEV_IMAGENAME}
          VERSION_MAJOR_MINOR_PATCH=${{ env.PHP_VERSION }}
          VERSION_MAJOR_MINOR=${VERSION_MAJOR_MINOR_PATCH%.*}
          VERSION_MAJOR=${VERSION_MAJOR_MINOR%.*}
          echo ::set-output name=dh_phpcli_dev_image::${DH_PHPCLI_DEV_IMAGENAME}
          echo ::set-output name=version_major_minor_patch::${VERSION_MAJOR_MINOR_PATCH}
          echo ::set-output name=version_major_minor::${VERSION_MAJOR_MINOR}
          echo ::set-output name=version_major::${VERSION_MAJOR}
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Fill DockerHub Docker PHP-CLI Dev Image metadata
        id: meta_dh_phpcli_dev
        uses: crazy-max/ghaction-docker-meta@v4
        with:
          images: "${{ steps.prep.outputs.dh_phpcli_dev_image }}"
          tags: |
            type=raw,value=${{ steps.prep.outputs.version_major_minor_patch }}-py2-node${{ env.NODE_VERSION }}
            type=raw,value=${{ steps.prep.outputs.version_major_minor }}-py2-node${{ env.NODE_VERSION }}
            type=raw,value=${{ steps.prep.outputs.version_major }}-py2-node${{ env.NODE_VERSION }}
            type=raw,value=latest

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.0.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.0.0

      - name: Cache Docker layers
        uses: actions/cache@v3.0.5
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker PHP-CLI Dev Image
        id: build_phpcli_dev
        uses: docker/build-push-action@v3.1.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: php-cli-dev
          build-args: |
            VERSION_ARG=${{ env.PHP_VERSION }}
            NODE_VERSION_ARG=${{ env.NODE_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: false
          load: true
          tags: ${{ steps.meta_dh_phpcli_dev.outputs.tags }}
          labels: ${{ steps.meta_dh_phpcli_dev.outputs.labels }}

      - name: Test PHP-CLI Prod Docker Image
        env:
          PHP_DOCKER_IMAGE_NAME: ${{ steps.prep.outputs.dh_phpcli_prd_image }}:${{ steps.meta_dh_phpcli_prd.outputs.version }}
        run: |
          bats -r test/tests.bats

      - name: Push DockerHub PHP-CLI Docker Dev Image
        id: push_dh_phpcli_dev
        uses: docker/build-push-action@v3.1.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: php-cli-dev
          build-args: |
            VERSION_ARG=${{ env.PHP_VERSION }}
            NODE_VERSION_ARG=${{ env.NODE_VERSION }}
            RELEASE_ARG=${{ env.CI_RUN_ID }}
            VCS_REF_ARG=${{ env.CI_SHA }}
            BUILD_DATE_ARG=${{ steps.prep.outputs.build_date }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_dh_phpcli_dev.outputs.tags }}
          labels: ${{ steps.meta_dh_phpcli_dev.outputs.labels }}

      - name: Check DockerHub PHP-CLI Dev Docker Image
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect ${{ steps.prep.outputs.dh_phpcli_dev_image }}:${{ steps.meta_dh_phpcli_dev.outputs.version }}
          docker pull ${{ steps.prep.outputs.dh_phpcli_dev_image }}:${{ steps.prep.outputs.version_major_minor_patch }}-py2
